{"events":[],"handlers":[{"code":"function start_splash()end;function best_point(a,b)if next(b)~=nil then local c=system.getPlayerWorldPos(player_id)local d=vec3(c)local e=vec3(player_pos_start)local f=utils.round((d-e):len(),30)test_html=\"<br>Distance: \"..f..\"<br>\"..json.encode(b)..\"points : \"..#b+1 end end;function solve_location(b)if size==4 then p1=b[0].p;r1=b[0].r;p2=b[1].p;r2=b[1].r;p3=b[2].p;r3=b[2].r;p4=b[3].p;r4=b[3].r;result=trilaterate(p1,r1,p2,r2,p3,r3,p4,r4)local g=math.floor(result.x)local y=math.floor(result.y)local h=math.floor(result.z)position=xyz_to_pos(g,y,h)system.setWaypoint(position)system.print(\"┍━━━━━NODE LOCATION━━━━━┑\")system.print(position)system.print(\"┕━━━━━━━━━━━━━━━━━━┙\")system.print(\"SCRIPT PAUSED | START ALT+8 | EXIT ALT+9\")else local i;if#b==3 then i=\"1 More point neededto find location \"else i=4-#table..\" More points needed to find location \"end;system.print(i)end end;function ticker(j)local k=utils.round(system.getArkTime(),1)if k%j==0 then return true else return false end end;function script_exit()system.print(\"[ EZ Scaner is off ]\")unit.exit()end;function distance_line_transform(g)y=0.02+0.253*g+-1.13E-04*g^2;return y end;function xyz_to_pos(g,y,h,l,system)local system=tostring(0)local l=tostring(0)local j=[[::pos{]]..system..[[,]]..l..[[,]]..tostring(g)..','..tostring(y)..','..tostring(h)..'}'return j end;function trilaterate(p1,r1,p2,r2,p3,r3,p4,r4)local m,n,o=r1*r1,r2*r2,r3*r3;local p=p2-p1;local q=p:normalize()local r=p:len()local s=p3-p1;local t=(s-s:project_on(q)):normalize()local u,v=s:dot(q),s:dot(t)local w=u*u+v*v;local x=q:cross(t)local g=(m-n+r*r)/(2*r)local y=(m-o+w-2*u*g)/(2*v)local z=m-g^2-y^2;if z<0.0000001 then z=0 end;local h=math.sqrt(z)local A=p1+q*g+t*y+x*h;local B=p1+q*g+t*y-x*h;if math.abs((p4-A):len()-r4)<math.abs((p4-B):len()-r4)then return A else return B end end;function delta_scrollwheel(C,D,E,F)local G=utils.round(system.getArkTime()-F,0.01)local H=1;if G<0.06 then H=12.5 end;local f=C+H*D;if f>400 then C=400 elseif f<0 then C=0 else C=utils.round(f,1)end;return C end;function ditance_to_points(I,b)local J;local K;local L end","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"0"},{"code":"test_html=\"\"style=[[\n\n    p {\n         font-size:90%;\n        }\n\n    .block {\n        border: 1px solid DimGray;\n        border-radius:10px;\n        background-color: rgba(0,0,0,.5)\n        }\n\n    #main_block{\n        text-align: center;\n        padding: 10px 10px 10px 10px;\n        }\n\n    #help_block{\n        text-align: left;\n       padding: 10px 10px 10px 10px;\n        width: 330px;\n        } \n\n    #pause_block{        \n        text-align: center;\n        font-size:80%;\n        }\n\n    #panel_left {  \n        position: absolute;\n        top: 0%;\n        left: 0%;\n        /*width: 310px;*/\n\n        }\n    #slider_header {\n        position: absolute;\n        top: 0vh;\n        font-size:90%;\n        width: 100%;\n        text-align: center;    \n        }\n\n\n    #slider_main {\n        position: relative;\n        font-size:100%;\n        color:#eca943;\n        z-index: 1000;\n        }\n\n    #slider_footer{\n        position: relative;\n        font-size:100%;\n        top:80%;\n        left:10%; \n        }\n\n    #panel_slider {\n        position: absolute;\n        top: 51.9vh; ;\n        left: 64.25vw;\n        width: 9vw;\n        height: 28.15vh;\n        transform: skew(13.5deg); \n        border-bottom: 28.5vh solid rgba(0,0,0,.85);\n        border-right: 1vw solid transparent;\n        z-index: 1000;\n        }\n\n    #panel_test {  \n       position: fixed;\n        top: 100px; /* or whatever top you need */\n     left: 50%;\n     width: auto;\n     -webkit-transform: translateX(-50%);\n     -moz-transform: translateX(-50%);\n     -ms-transform: translateX(-50%);\n     -o-transform: translateX(-50%);\n     transform: translateX(-50%);\n      }\n\n]]help_block=[[\n    <text style='color:#eca943'>HOW TO USE</text><br>\n    1) Use Scanner<br>\n    2) Scroll Mouse Wheel to Ping<br>\n    3) Add (Alt+3) | Remove (Alt+5) Points<br>\n    4) Find Node (Alt+4)<br>\n    5) Destination Link on Chat<br>\n    6) Resume Paussed Script (Alt+8)<br>\n    7) Exit Script (Alt+9)<br>\n    ━━━━━━━━━━━━━━━━<br>\n    <text style='color:#eca943'>GOOD TO KNOW</text><br>\n    - Only Alioth Coords Tested ATM, yet on other planets<br>\n    - After the node search, the scrip will pause. Resume if needed<br>\n    - All points will be flused after search<br>\n    - Keep the script paused to save GPU/CPU <br>\n    - Change Script parameters for panels to be on/off at the start of the script<br>\n    - The mouse scroll wheel has a aceleration multiplier, move it arround a bit to get the feeling of it \n    ━━━━━━━━━━━━━━━━<br>\n    <text style='color:#eca943'>KEY-SHORTCUTS</text><br>\n    Mouse Wheel : Change Distance<br>\n    Alt+1 : Help <br>\n    Alt+2 : n/a<br>\n    Alt+3 : Add Point <br>\n    Alt+4 : Find Node <br>\n    Alt+5 : Delete Point <br>\n    Alt+6 : n/a<br>\n    Alt+7 : Tougle Slider On/Off<br>\n    Alt+8 : Pause | Resume Script <br>\n    Alt+9 : Exit App <br>\n\n    ━━━━━━━━━━━━━━━━<br>\n    EZ Scanner | v1.05 | 2022.10.20 <br>    \n    github.com/juvenius/du_ez_scanner <br>\n    Issues? discord: Juvenius#2318 <br>\n    ▴ ▾ ◂  ▸ ▵ ▿ ◃ ▹ ▲ ▼ ◄  ► △ ▽ ◁ ▷<br>\n]]","filter":{"args":[],"signature":"onStart()","slotKey":"-5"},"key":"0"},{"code":"time=system.getArkTime()if pause_tougle==false then local a=system.getThrottleInputFromMouseWheel()if distance~=distance+a then distance=delta_scrollwheel(distance,a,time,idle)idle=system.getArkTime()else local b=time-idle;if b>pause_timer then pause_tougle=true;idle=system.getArkTime()end end else local b=time-idle;if b>stop_timer then script_exit()end end;best_point(1,list)","filter":{"args":[],"signature":"onUpdate()","slotKey":"-4"},"key":"0"},{"code":"utils=require(\"cpml/utils\")","filter":{"args":[],"signature":"onStart()","slotKey":"-4"},"key":"0"},{"code":"script_exit()","filter":{"args":[{"value":"option9"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"6"},{"code":"pause_tougle=not pause_tougle;if pause_tougle==false then unit.setTimer(\"clock\",clock_rate)system.print(\"EZ Scanner -Resumed-\")end","filter":{"args":[{"value":"option8"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"4"},{"code":"slider_tougle=not slider_tougle","filter":{"args":[{"value":"option7"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"9"},{"code":"if size>0 then table.remove(list)size=size-1 else list={}end","filter":{"args":[{"value":"option5"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"3"},{"code":"solve_location(list)if size==4 then list={}size=0 end;if pause_solve_tougle then pause_tougle=pause_solve_tougle end","filter":{"args":[{"value":"option4"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"5"},{"code":"if size<4 then local a={}a.p=vec3(system.getPlayerWorldPos(player_id))a.r=distance;list[size]=a;size=size+1 elseif size==3 then if auto_solve_tougle==true then solve_location(list)if size==4 then list={}end else system.print(\"Ready to Find Node, Press Alt+4\")end end","filter":{"args":[{"value":"option3"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"2"},{"code":"help_tougle=not help_tougle","filter":{"args":[{"value":"option1"}],"signature":"onActionStart(action)","slotKey":"-4"},"key":"7"},{"code":"local a=\"◄ EZ SCANNER ►\"local b=\"\"local c=\"<text style='color:#eca943'>Alt+3 <b>[＋]</b>  ￭ <b>[－]</b> Alt+5</text>\"local d=\"\"if size==0 then b=\"<text style='color:white'>➀➁➂➃</text>\"elseif size==1 then b=\"<text style='color:#eca943'>➊</text>➁➂➃\"elseif size==2 then b=\"<text style='color:#eca943'>➊➋</text>➂➃\"elseif size==3 then b=\"<text style='color:#eca943'>➊➋➌</text>➃\"elseif size==4 then b=\"<text style='color:#498aff'>➊➋➌➍</text>\"c=\"<text style='color:#498aff'>FIND IT! ALT+4</text>\"end;if size<4 then d=\"DISTANCE: \"..distance else d=\"All Points In!\"end;line4=\"<text style='font-size:80%'> HELP ALT+1 | SLIDER ALT+7</text>\"local e=[[\n <p id=\"main_block\" class=\"block\">]]..a..\"<br>\"..c..\"<br>\"..b..\"<br>\"..d..\"<br>\"..line4 ..[[\n     </p>]]local f=[[\n <p id=\"help_block\" class=\"block\">]]..help_block..[[\n </p>]]if help_tougle==false then f=\"\"end;local g=[[\n <div id=\"panel_left\">]]..e..f..[[\n </div>]]local h=\"\"if slider_tougle==true then local i=distance_line_transform(distance)h=[[ \n    <div id=\"panel_slider\">   \n      <div id=\"slider_main\" style='top: ]]..100-i-3 ..[[%;'>]]..[[◯━━━━[ ]]..distance..[[ ]<br> \n         <p style=\"text-align: right\">]]..\"\"..b..[[\n         </p>\n       </div> \n       <p id=\"slider_header\">]]..a..[[<br>]]..c..[[\n       </p>\n    </div>]]end;local j=\"\"if dev_mode==1 then j=[[\n    <div id=\"panel_test\">]]..test_html..[[</div>    \n  ]]end;header=\"<header><style>\"..style..\"</style></header>\"if pause_tougle==true then local k=ticker(2)local l=\"eca943\"if k then l=\"498aff\"end;unit.setTimer(\"clock\",1)body=[[<body>\n    <div id=\"panel_left\">\n    <p id=\"pause_block\">\n    <text style='color:#]]..l..[['>￭</text> EZ Scanner <br>\n    START: ALT+8 | EXIT: ALT+9\n    <p>\n    </div></body>]]else body=\"<body>\"..g..h..j..\"</body>\"end;footer=\"\"html=\"<html>\"..header..body..footer..\"</html>\"system.setScreen(html)","filter":{"args":[{"value":"clock"}],"signature":"onTimer(timerid)","slotKey":"-1"},"key":"0"},{"code":"pause_script_on_start=false;help_panel_on_start=true;slider_panel_on_start=true;clock_rate=0.01;auto_solve_on_4_points=true;pause_script_after_solve=true;auto_pause_script_timer=1200;auto_stop_after_pause=12000;distance=250;list={}size=0;time=system.getArkTime()unit.setTimer(\"clock\",clock_rate)player_id=player.getId()player_name=database.getPlayer(player_id)player_pos_start=system.getPlayerWorldPos(player_id)system.showScreen(1)start_splash()dev_mode=0;help_tougle=help_panel_on_start;slider_tougle=slider_panel_on_start;pause_tougle=pause_script_on_start;pause_timer=auto_pause_script_timer;auto_solve_tougle=auto_solve_on_4_points;idle=time;stop_timer=auto_stop_after_pause;pause_solve_tougle=pause_script_after_solve","filter":{"args":[],"signature":"onStart()","slotKey":"-1"},"key":"0"}],"methods":[],"slots":{"0":{"name":"core","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-5":{"name":"library","type":{"events":[],"methods":[]}},"-4":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"player","type":{"events":[],"methods":[]}},"-2":{"name":"construct","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}}}}
